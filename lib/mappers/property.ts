import { OwnerIntentionEnum, PropertyTypeEnum } from '@/lib/constants/list';
import { PropertyBackendDto } from '../types/properties';

export const propertyDefaultValues = {
  functionalUnit: '',
  name: '',
  description: '',
  propertyType: PropertyTypeEnum.PH,
  ownerIntention: OwnerIntentionEnum.RENT,
  ownerName: '',
  ownerPhone: '',
  ownerCBU: '',
  ownerAlias: '',
  registryNumber: '',
  commercialStatus: 'Disponible',
  propertyCondition: '',
  thumbnail: undefined,
  images: [],
  documents: [],
  coveredMeters: '',
  uncoveredMeters: '',
  rooms: '',
  bathrooms: '1',
  yearOfConstruction: '',
  electricityIdentifier: '',
  gasIdentifier: '',
  ABLIdentifier: '',
  administration: '',
  administrationPhone: '',
  administrationEmail: '',
  administrationAddress: '',
  hasExpenses: false,
  hasExtraordinaryExpenses: false,
  hasKitchen: false,
  hasPatio: false,
  hasPool: false,
  hasParking: false,
  address: {
    city: {
      id: '',
      name: '',
      province: {
        id: '06',
        name: 'Buenos Aires',
      },
      latitude: '',
      longitude: '',
    },
    street: '',
    number: '',
    apartment: '',
    neighborhood: '',
    searchCity: '',
    postalCode: '',
    nomenclator: '',
    latitude: '',
    longitude: '',
  },
};

export const propertyMapperFront = (property: PropertyBackendDto) => {
  return {
    id: property.id,
    name: property.name,
    description: property.description ? property.description : '',
    propertyType: property.propertyType,
    ownerIntention: property.ownerIntention,
    ownerName: property.ownerName ? property.ownerName : '',
    ownerPhone: property.ownerPhone ? property.ownerPhone : '',
    ownerCBU: property.ownerCBU ? property.ownerCBU : '',
    ownerAlias: property.ownerAlias ? property.ownerAlias : '',
    administration: property.administration ? property.administration : '',
    administrationPhone: property.administrationPhone ? property.administrationPhone : '',
    administrationEmail: property.administrationEmail ? property.administrationEmail : '',
    administrationAddress: property.administrationAddress ? property.administrationAddress : '',
    registryNumber: property.registryNumber,
    coveredMeters: property.coveredMeters ? property.coveredMeters.toString() : '',
    uncoveredMeters: property.uncoveredMeters ? property.uncoveredMeters.toString() : '',
    rooms: property.rooms ? property.rooms.toString() : '',
    bathrooms: property.bathrooms ? property.bathrooms.toString() : '',
    yearOfConstruction: property.yearOfConstruction ? property.yearOfConstruction.toString() : '',
    documents: property.documents || [],
    electricityIdentifier: property.electricityIdentifier ? property.electricityIdentifier : '',
    functionalUnit: property.functionalUnit ? property.functionalUnit : '',
    gasIdentifier: property.gasIdentifier ? property.gasIdentifier : '',
    hasBalcony: property.hasBalcony ? property.hasBalcony : false,
    hasBarbecue: property.hasBarbecue ? property.hasBarbecue : false,
    hasExpenses: property.hasExpenses ? property.hasExpenses : false,
    hasExtraordinaryExpenses: property.hasExtraordinaryExpenses
      ? property.hasExtraordinaryExpenses
      : false,
    hasFurnished: property.hasFurnished ? property.hasFurnished : false,
    hasGarden: property.hasGarden ? property.hasGarden : false,
    hasKitchen: property.hasKitchen ? property.hasKitchen : false,
    hasParking: property.hasParking ? property.hasParking : false,
    hasPatio: property.hasPatio ? property.hasPatio : false,
    hasPool: property.hasPool ? property.hasPool : false,
    hasTerrace: property.hasTerrace ? property.hasTerrace : false,
    hasZoom: property.hasZoom ? property.hasZoom : false,
    images: property.images || [],
    propertyCondition: property.propertyCondition ? property.propertyCondition : '',
    servicesComment: property.servicesComment ? property.servicesComment : '',
    thumbnail: property.thumbnail ? property.thumbnail : '',
    address: {
      street: property.address.street ? property.address.street : '',
      number: property.address.number ? property.address.number : '',
      apartment: property.address.apartment ? property.address.apartment : '',
      neighborhood: property.address.neighborhood ? property.address.neighborhood : '',
      city: {
        id: property.address.city?.id || '',
        name: property.address.city?.name || '',
        province: {
          id: property.address.city?.province?.id || '',
          name: property.address.city?.province?.name || '',
          latitude: property.address.city?.province?.latitude || '',
          longitude: property.address.city?.province?.longitude || '',
        },
        latitude: property.address.city?.latitude || '',
        longitude: property.address.city?.longitude || '',
      },
      nomenclator: property.address.nomenclator ? property.address.nomenclator : '',
      latitude: property.address.latitude ? property.address.latitude : '',
      longitude: property.address.longitude ? property.address.longitude : '',
      postalCode: property.address.postalCode || '',
    },
  };
};
